function [] = extractCategoricalROIvecs(project_params, which_subjects)


ROI_names = {'FPl','FPm','BA46','vmPFC','rTPJ','rSTS','preSMA'};
ROI_coefs_cell = {};
ROI_R2_cell = {};

for i=1:length(ROI_names)
    [~,~, ~, ROI_coefs, ROI_R2] = ...
    printConfByResp(project_params, which_subjects, ROI_names{i}, ROI_names{i});
    ROI_coefs_cell{i}=ROI_coefs;
    ROI_R2_cell{i} = ROI_R2;
end

contrastFolder = '..\analyzed\DM10555\group';

contrast_names = {'linear','quadratic','linear_task','quadratic_task',...
    'detection_response_linear','tilt_response_linear','detection_response_quad',...
    'tilt_response_quad'};

contrasts = {};

linear = [];
quadratic = [];
intercept_task = []
linear_task = [];
quadratic_task = [];
detection_discrimination_linear = [];
tilt_discrimination_linear = [];
detection_discrimination_quadratic = [];
tilt_discrimination_quadratic = [];
detection_response_linear = [];
tilt_response_linear = [];
detection_response_quadratic = [];
tilt_response_quadratic = [];

for i=1:length(ROI_names)
    coefs = ROI_coefs_cell{i};
    global_coefs = nanmean(coefs,3);
    
    %linear
    linear_vec = global_coefs(:,2);
    [h,p,ci,stats]=ttest(linear_vec);
    linear = [linear; [mean(linear_vec), stats.tstat, p, std(linear_vec)]];
    
    %linear
    quadratic_vec = global_coefs(:,1);
    [h,p,ci,stats]=ttest(quadratic_vec);
    quadratic = [quadratic; [mean(quadratic_vec), stats.tstat, p, std(linear_vec)]];
    
    %intercept_task
    intercept_response_mat = squeeze(coefs(:,3,:));
    threed_intercept_response_mat = cat(3,intercept_response_mat(:,[1,3,5]),intercept_response_mat(:,[2,4,6]));
    intercept_task_mat = nanmean(threed_intercept_response_mat,3);
    [p,tbl]=anova2(intercept_task_mat,1);
    intercept_task = [intercept_task; [ tbl{2,5}, tbl{2,6}]];
    
    %linear_task
    linear_response_mat = squeeze(coefs(:,2,:));
    threed_linear_response_mat = cat(3,linear_response_mat(:,[1,3,5]),linear_response_mat(:,[2,4,6]));
    linear_task_mat = nanmean(threed_linear_response_mat,3);
    [p,tbl]=anova2(linear_task_mat,1);
    linear_task = [linear_task; [ tbl{2,5}, tbl{2,6}]];
    
    %quadratic_task
    quad_response_mat = squeeze(coefs(:,1,:));
    threed_quad_response_mat = cat(3,quad_response_mat(:,[1,3,5]),quad_response_mat(:,[2,4,6]));
    quad_task_mat = nanmean(threed_quad_response_mat,3);
    [p,tbl]=anova2(quad_task_mat,1);
    quadratic_task = [quadratic_task; [ tbl{2,5}, tbl{2,6}]];
    
    %detection_discrimination_linear
    contrast_vec = linear_task_mat(:,1)-linear_task_mat(:,2);
    [h,p,ci,stats]=ttest(contrast_vec);
    detection_discrimination_linear = [detection_discrimination_linear; ...
        [mean(contrast_vec), stats.tstat, p, std(contrast_vec)]];
    
    %tilt_discrimination_linear
    contrast_vec = linear_task_mat(:,3)-linear_task_mat(:,2);
    [h,p,ci,stats]=ttest(contrast_vec);
    tilt_discrimination_linear = [tilt_discrimination_linear; ...
        [mean(contrast_vec), stats.tstat, p, std(contrast_vec)]];
    
     %detection_discrimination_quadratic
    contrast_vec = quad_task_mat(:,1)-quad_task_mat(:,2);
    [h,p,ci,stats]=ttest(contrast_vec);
    detection_discrimination_quadratic = [detection_discrimination_quadratic; ...
        [mean(contrast_vec), stats.tstat, p, std(contrast_vec)]];
    
    %tilt_discrimination_quadratic
    contrast_vec = quad_task_mat(:,3)-quad_task_mat(:,2);
    [h,p,ci,stats]=ttest(contrast_vec);
    tilt_discrimination_quadratic = [tilt_discrimination_quadratic; ...
        [mean(contrast_vec), stats.tstat, p, std(contrast_vec)]];
    
    %detection_response_linear
    contrast_vec = linear_response_mat(:,1)-linear_response_mat(:,2);
    [h,p,ci,stats]=ttest(contrast_vec);
    detection_response_linear = [detection_response_linear; ...
        [nanmean(contrast_vec), stats.tstat, p, nanstd(contrast_vec)]];
    
    %tilt_response_linear
    contrast_vec = linear_response_mat(:,5)-linear_response_mat(:,6);
    [h,p,ci,stats]=ttest(contrast_vec);
    tilt_response_linear = [tilt_response_linear; ...
        [nanmean(contrast_vec), stats.tstat, p, nanstd(contrast_vec)]];
    
    %detection_response_quadratic
    contrast_vec = quad_response_mat(:,1)-linear_response_mat(:,2);
    [h,p,ci,stats]=ttest(contrast_vec);
    detection_response_quadratic = [detection_response_quadratic; ...
        [nanmean(contrast_vec), stats.tstat, p, nanstd(contrast_vec)]];
    
    %tilt_response_quadratic
    contrast_vec = quad_response_mat(:,5)-quad_response_mat(:,6);
    [h,p,ci,stats]=ttest(contrast_vec);
    tilt_response_quadratic = [tilt_response_quadratic; ...
        [nanmean(contrast_vec), stats.tstat, p, nanstd(contrast_vec)]];
    
end


linear_table = table(ROI_names', linear(:,1),linear(:,2),linear(:,3),linear(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'});
writetable(linear_table, fullfile(contrastFolder,'linear_ROIs.csv'))

    
quadratic_table = table(ROI_names', quadratic(:,1), quadratic(:,2), quadratic(:,3), quadratic(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'});
writetable(quadratic_table, fullfile(contrastFolder,'quadratic_ROIs.csv'))

intercept_task_table = table(ROI_names', intercept_task(:,1),intercept_task(:,2),...
    'VariableNames',...
        {'region','F_value','p_value'});
writetable(intercept_task_table, fullfile(contrastFolder,'intercept_task_ROIs.csv'))

linear_task_table = table(ROI_names', linear_task(:,1),linear_task(:,2),...
    'VariableNames',...
        {'region','F_value','p_value'});
writetable(linear_task_table, fullfile(contrastFolder,'linear_task_ROIs.csv'))

quadratic_task_table = table(ROI_names', quadratic_task(:,1),quadratic_task(:,2),...
    'VariableNames',...
        {'region','F_value','p_value'});
writetable(quadratic_task_table, fullfile(contrastFolder,'quadratic_task_ROIs.csv'))

detection_discrimination_linear_table = table(ROI_names', ...
    detection_discrimination_linear(:,1),...
    detection_discrimination_linear(:,2),...
    detection_discrimination_linear(:,3),...
    detection_discrimination_linear(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'});
writetable(detection_discrimination_linear_table, fullfile(contrastFolder,...
    'detection_discrimination_linear_ROIs.csv'))

    
tilt_discrimination_linear_table = table(ROI_names', ...
    tilt_discrimination_linear(:,1),...
    tilt_discrimination_linear(:,2),...
    tilt_discrimination_linear(:,3),...
    tilt_discrimination_linear(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'});      
writetable(tilt_discrimination_linear_table, fullfile(contrastFolder,...
    'tilt_discrimination_linear_ROIs.csv'))

detection_discrimination_quadratic_table = table(ROI_names', ...
    detection_discrimination_quadratic(:,1),...
    detection_discrimination_quadratic(:,2),...
    detection_discrimination_quadratic(:,3),...
    detection_discrimination_quadratic(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'});  
writetable(detection_discrimination_quadratic_table, fullfile(contrastFolder,...
    'detection_discrimination_quadratic_ROIs.csv'))

tilt_discrimination_quadratic_table = table(ROI_names', ...
    tilt_discrimination_quadratic(:,1),...
    tilt_discrimination_quadratic(:,2),...
    tilt_discrimination_quadratic(:,3),...
    tilt_discrimination_quadratic(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'});
writetable(tilt_discrimination_quadratic_table, fullfile(contrastFolder,...
    'tilt_discrimination_quadratic_ROIs.csv'))


detection_response_linear_table = table(ROI_names', ...
    detection_response_linear(:,1),...
    detection_response_linear(:,2),...
    detection_response_linear(:,3),...
    detection_response_linear(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'});   
writetable(detection_response_linear_table, fullfile(contrastFolder,...
    'detection_response_linear_ROIs.csv')) 
    
tilt_response_linear_table = table(ROI_names', ...
    tilt_response_linear(:,1),...
    tilt_response_linear(:,2),...
    tilt_response_linear(:,3),...
    tilt_response_linear(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'});  
writetable(tilt_response_linear_table, fullfile(contrastFolder,...
    'tilt_response_linear_ROIs.csv'))     
    
detection_response_quadratic_table = table(ROI_names', ...
    detection_response_quadratic(:,1),...
    detection_response_quadratic(:,2),...
    detection_response_quadratic(:,3),...
    detection_response_quadratic(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'});  
writetable(detection_response_quadratic_table, fullfile(contrastFolder,...
    'detection_response_quadratic_ROIs.csv')) 
    
tilt_response_quadratic_table = table(ROI_names', ...
    tilt_response_quadratic(:,1),...
    tilt_response_quadratic(:,2),...
    tilt_response_quadratic(:,3),...
    tilt_response_quadratic(:,4),...
    'VariableNames',...
        {'region','mean','t_value','p_value','std'}); 
writetable(tilt_response_quadratic_table, fullfile(contrastFolder,...
    'tilt_response_quadratic_ROIs.csv'))    
    
       
end

